import { useEffect, useState } from 'react';
import './index.css';

function App() {

  const [image, setImage] = useState("");
  const [input, setInput] = useState("blue");
  
  useEffect(() => {
    getImage()
  },[])

  let getImage = async () => {
    let request = await fetch(`https://api.unsplash.com/search/photos/?client_id=5I-qjhGO84-icNe8laZt34LWl8hMBPgwhHs3arKcT_Q&query=${input}&page=1&per_page=10`);
    let response = await request.json();

    setImage(response.results);
  }


  let addInput = (e) => {
    setInput(e.target.value)
  }

  return (

    <div className="App" onClick={getImage}>

      <nav>
              <svg width="792" height="792" viewBox="0 0 792 792" fill="none" xmlns="http://www.w3.org/2000/svg">
        <circle cx="396" cy="396" r="396" fill="url(#paint0_linear_128_3)"/>
        <path d="M308.807 240V167.273H333.381C339.086 167.273 343.75 168.303 347.372 170.362C351.018 172.398 353.717 175.156 355.469 178.636C357.221 182.116 358.097 185.999 358.097 190.284C358.097 194.569 357.221 198.464 355.469 201.967C353.741 205.471 351.065 208.265 347.443 210.348C343.821 212.408 339.181 213.438 333.523 213.438H315.909V205.625H333.239C337.145 205.625 340.282 204.95 342.649 203.601C345.017 202.251 346.733 200.429 347.798 198.132C348.887 195.812 349.432 193.196 349.432 190.284C349.432 187.372 348.887 184.768 347.798 182.472C346.733 180.175 345.005 178.376 342.614 177.074C340.223 175.748 337.05 175.085 333.097 175.085H317.614V240H308.807ZM371.147 240V185.455H379.528V240H371.147ZM375.408 176.364C373.775 176.364 372.366 175.807 371.183 174.695C370.022 173.582 369.442 172.244 369.442 170.682C369.442 169.119 370.022 167.782 371.183 166.669C372.366 165.556 373.775 165 375.408 165C377.042 165 378.439 165.556 379.599 166.669C380.782 167.782 381.374 169.119 381.374 170.682C381.374 172.244 380.782 173.582 379.599 174.695C378.439 175.807 377.042 176.364 375.408 176.364ZM417.037 241.136C411.923 241.136 407.52 239.929 403.826 237.514C400.133 235.099 397.292 231.773 395.304 227.536C393.315 223.298 392.321 218.456 392.321 213.011C392.321 207.472 393.339 202.583 395.375 198.345C397.434 194.084 400.299 190.758 403.968 188.366C407.662 185.952 411.97 184.744 416.895 184.744C420.73 184.744 424.186 185.455 427.264 186.875C430.342 188.295 432.863 190.284 434.828 192.841C436.793 195.398 438.012 198.381 438.485 201.79H430.105C429.466 199.304 428.045 197.102 425.843 195.185C423.665 193.243 420.73 192.273 417.037 192.273C413.77 192.273 410.905 193.125 408.443 194.83C406.004 196.51 404.099 198.89 402.725 201.967C401.376 205.021 400.701 208.608 400.701 212.727C400.701 216.941 401.364 220.611 402.69 223.736C404.039 226.861 405.933 229.287 408.372 231.016C410.834 232.744 413.722 233.608 417.037 233.608C419.215 233.608 421.191 233.229 422.967 232.472C424.743 231.714 426.246 230.625 427.477 229.205C428.708 227.784 429.584 226.08 430.105 224.091H438.485C438.012 227.311 436.84 230.211 434.97 232.791C433.123 235.348 430.673 237.384 427.619 238.899C424.589 240.391 421.061 241.136 417.037 241.136ZM466.788 241.278C463.332 241.278 460.195 240.627 457.377 239.325C454.56 238 452.323 236.094 450.666 233.608C449.009 231.098 448.18 228.068 448.18 224.517C448.18 221.392 448.796 218.859 450.027 216.918C451.258 214.953 452.903 213.414 454.963 212.301C457.022 211.188 459.295 210.36 461.781 209.815C464.29 209.247 466.812 208.797 469.345 208.466C472.659 208.04 475.346 207.72 477.406 207.507C479.489 207.27 481.004 206.88 481.951 206.335C482.922 205.791 483.407 204.844 483.407 203.494V203.21C483.407 199.706 482.449 196.984 480.531 195.043C478.637 193.101 475.761 192.131 471.902 192.131C467.901 192.131 464.764 193.007 462.491 194.759C460.218 196.51 458.62 198.381 457.697 200.369L449.743 197.528C451.163 194.214 453.057 191.634 455.424 189.787C457.815 187.917 460.42 186.615 463.237 185.881C466.078 185.123 468.871 184.744 471.618 184.744C473.369 184.744 475.382 184.957 477.654 185.384C479.951 185.786 482.164 186.626 484.295 187.905C486.449 189.183 488.237 191.113 489.657 193.693C491.078 196.274 491.788 199.73 491.788 204.062V240H483.407V232.614H482.981C482.413 233.797 481.466 235.064 480.14 236.413C478.815 237.763 477.051 238.911 474.849 239.858C472.647 240.805 469.96 241.278 466.788 241.278ZM468.066 233.75C471.381 233.75 474.174 233.099 476.447 231.797C478.743 230.495 480.472 228.814 481.632 226.754C482.815 224.695 483.407 222.528 483.407 220.256V212.585C483.052 213.011 482.271 213.402 481.064 213.757C479.88 214.089 478.507 214.384 476.944 214.645C475.405 214.882 473.902 215.095 472.434 215.284C470.99 215.45 469.818 215.592 468.919 215.71C466.741 215.994 464.705 216.456 462.811 217.095C460.94 217.711 459.425 218.646 458.265 219.901C457.129 221.132 456.561 222.812 456.561 224.943C456.561 227.855 457.638 230.057 459.792 231.548C461.97 233.016 464.728 233.75 468.066 233.75Z" fill="white"/>
        <defs>
        <linearGradient id="paint0_linear_128_3" x1="396" y1="0" x2="396" y2="792" gradientUnits="userSpaceOnUse">
        <stop stop-color="#CA4FDE"/>
        <stop offset="1" stop-color="#C4C4C4" stop-opacity="0"/>
        </linearGradient>
        </defs>
        </svg>
      </nav>
      <input type="text" value={input} onChange={addInput}/>

      <div className="imageContainer">
        { image&&
          image.map((photo) => <img src={photo.urls.small} alt="photo"></img>)
        }
      </div>
        
    </div>
  );
}

export default App;
